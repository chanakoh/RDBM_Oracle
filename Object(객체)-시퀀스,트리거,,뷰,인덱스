시퀀스(Sequence) : 데이터베이스에서 사용되는 객체. 일련의 숫자를 생성하는데 주로 사용
고유한 값, 주로 기본키 또는 고유 식별자 생성에 사용

예제코드 :
CREATE SEQUENCE 어떤값의_ID
        START WITH 1
        INCREMENT BY 1
        NOMAXVALUE
        NOCYCLE;
CREATE SEQUENCE : 시퀀스를 생성하는 명령어
어떤값의_ID : 생성하려는 시퀀스의 이름을 지정. 데이터베이스에서 해당 시퀀스를 식별하는데 사용
START WITH 1 : 시퀀스의 초기 시작 값을 1로 설정
INCREMENT BY 1 : 시퀀스의 각 값이 1씩 증가하도록 설정
NOMAXVALUE : 시퀀스가 최대값에 도달하지 않도록 설정
NOCYCLE : 시퀀스가 최대값에 도달하면 다시 처음으로 돌아가지 않도록 설정

트리거(Trigger) : 데이터베이스에서 발생하는 특정 이벤트에 반응하여 자동으로 실행되는 SQL코드 조각
                  데이터베이스의 상태를 감시하고 데이터 변경, 삽입, 업데이트 또는 삭제와 같은 작업을 행할 수 있음

예제코드 :
CREATE OR REPLACE TRIGGER 어떤값의_ID
BEFORE INSERT ON 테이블
FOR EACH ROW
BEGIN
      SELECT 어떤값의_ID_SEQ.NEXTVAL
      INTO : NEW.어떤값의_ID
      FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER : 트리거를 생성 또는 변경하는 명렁
OR REPLACE : 이미 동일한 이름의 트리거가 있는 경우 덮어쓰기를 허용
어떤값의_ID : 생성하려는 트리거의 이름 지정. 데이터베이스에서 해당 트리거를 식별하는데 사용
BEFORE INSERT ON 테이블 :테이블에 행이 삽입되기 전에 실행
FOR EACH ROW : 트리거가 각 행별로 실행되도록 설정. 트리거 내에서 현재 행을 참조할 수 있도록 함
BEGIN 및 END : 블록을 정의. 블록 내에서 트리거가 수행할 작업을 정의할 수 있음. 
              현재 행에대한 작업을 수행하거나 다른 로직을 실행하는데 사용

VIEW
논리적 객체
실제로 데이터를 저장하지 않고 쿼리 결과를 나타내는 가상 테이블
뷰 자체에서는 데이터를 저장하거나 변경하지 않기 때문에 DML명령(INSERT,UPDATE,DELETE)을 통해 뷰를 직접 수정하는 것은 일반적으로 제한
예제코드:
CREATE VIEW 뷰 이름 생성 AS 
SELECT 넣고자하는 컬럼
FROM 테이블명
JOIN;

INDEX:
데이터베이스 성능을 향상시키는 데 중요한 역할을 하는 데이터 구조
특정 열(컬럼)에 대한 검색 및 조회 작업을 최적하 하기 위해 사용

예제 코드:
--EMPLOYEE 테이블이 있다는 가정
CREATE TABLE EMPLYEE (
             EMPLOYEE_ID NUMBER(5) PRIMARY KEY,
             NAME VARCHAR2(50),
             HIRE_DATE DATE
);

--인덱스 생성
CREATE INDEX INDEX_EMPLOYEE_NAME ON EMPLOYEE(NAME);
--인덱스를 사용한 SELECT예제문
SELECT * FROM EMPLOYEE WHERE NAME = 'KH';

*INDEX 는 B-TREE 구조로 되어있음
B-TREE : 데이터를 저장하고 효율적으로 검색하는데 사용되는 데이터 구조
BALANCER TREE 주로 데이터베이스 시스템, 파일세스템, 디스크관리, 파일구조, 검색엔진 등 다양한 컴퓨팅 시스템에서 인덱싱에 사용
